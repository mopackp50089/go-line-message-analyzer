// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc_chat_gpt.proto

package chatgpt

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ChatGptRequest struct {
	Role                 string   `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatGptRequest) Reset()         { *m = ChatGptRequest{} }
func (m *ChatGptRequest) String() string { return proto.CompactTextString(m) }
func (*ChatGptRequest) ProtoMessage()    {}
func (*ChatGptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bcbf40cb0e94dea, []int{0}
}

func (m *ChatGptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatGptRequest.Unmarshal(m, b)
}
func (m *ChatGptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatGptRequest.Marshal(b, m, deterministic)
}
func (m *ChatGptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatGptRequest.Merge(m, src)
}
func (m *ChatGptRequest) XXX_Size() int {
	return xxx_messageInfo_ChatGptRequest.Size(m)
}
func (m *ChatGptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatGptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChatGptRequest proto.InternalMessageInfo

func (m *ChatGptRequest) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *ChatGptRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type ChatGptReply struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatGptReply) Reset()         { *m = ChatGptReply{} }
func (m *ChatGptReply) String() string { return proto.CompactTextString(m) }
func (*ChatGptReply) ProtoMessage()    {}
func (*ChatGptReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bcbf40cb0e94dea, []int{1}
}

func (m *ChatGptReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatGptReply.Unmarshal(m, b)
}
func (m *ChatGptReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatGptReply.Marshal(b, m, deterministic)
}
func (m *ChatGptReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatGptReply.Merge(m, src)
}
func (m *ChatGptReply) XXX_Size() int {
	return xxx_messageInfo_ChatGptReply.Size(m)
}
func (m *ChatGptReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatGptReply.DiscardUnknown(m)
}

var xxx_messageInfo_ChatGptReply proto.InternalMessageInfo

func (m *ChatGptReply) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func init() {
	proto.RegisterType((*ChatGptRequest)(nil), "chatgpt.ChatGptRequest")
	proto.RegisterType((*ChatGptReply)(nil), "chatgpt.ChatGptReply")
}

func init() { proto.RegisterFile("rpc_chat_gpt.proto", fileDescriptor_0bcbf40cb0e94dea) }

var fileDescriptor_0bcbf40cb0e94dea = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0x31, 0x4b, 0x03, 0x41,
	0x10, 0x85, 0x89, 0x88, 0xd1, 0x45, 0x2c, 0xb6, 0x3a, 0xac, 0x24, 0x95, 0x08, 0x97, 0x8d, 0xa4,
	0xd1, 0xc6, 0x42, 0x0b, 0x5b, 0xb9, 0xd2, 0x26, 0x4c, 0xd6, 0x61, 0x6f, 0x61, 0x33, 0x33, 0xce,
	0xce, 0x15, 0xe7, 0xaf, 0x17, 0x0f, 0xef, 0xba, 0xf7, 0x3d, 0x78, 0x8f, 0xf7, 0x9c, 0x57, 0x89,
	0x87, 0xd8, 0x83, 0x1d, 0x92, 0xd8, 0x56, 0x94, 0x8d, 0xfd, 0xfa, 0x8f, 0x93, 0xd8, 0xe6, 0xc5,
	0xdd, 0xbc, 0xf5, 0x60, 0xef, 0x62, 0x1d, 0x7e, 0x0f, 0x58, 0xcd, 0x7b, 0x77, 0xae, 0x5c, 0xb0,
	0x59, 0xdd, 0xad, 0xee, 0xaf, 0xba, 0x49, 0xfb, 0xc6, 0xad, 0x23, 0x93, 0x21, 0x59, 0x73, 0x36,
	0xd9, 0x33, 0x6e, 0x1e, 0xdc, 0xf5, 0x92, 0x97, 0x32, 0xfa, 0x5b, 0x77, 0xa9, 0x58, 0x85, 0xa9,
	0xce, 0x0d, 0x0b, 0xbf, 0x76, 0x9f, 0x1f, 0x29, 0x5b, 0x3f, 0x1c, 0xb7, 0x91, 0x4f, 0x81, 0x09,
	0x25, 0x63, 0xc4, 0xdd, 0xe3, 0xee, 0x79, 0xff, 0x14, 0x12, 0xb7, 0x25, 0x13, 0xb6, 0x27, 0xac,
	0x15, 0x12, 0xb6, 0x40, 0x50, 0xc6, 0x1f, 0xd4, 0x90, 0xc9, 0x50, 0x09, 0x4a, 0x80, 0x2f, 0x10,
	0x43, 0x0d, 0x49, 0x25, 0x86, 0xff, 0xfd, 0xc7, 0x8b, 0xe9, 0xcf, 0xfe, 0x37, 0x00, 0x00, 0xff,
	0xff, 0xcd, 0xe0, 0x60, 0xd1, 0xe5, 0x00, 0x00, 0x00,
}
